from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from smsactivate.api import SMSActivateAPI
from config import api_sms, chanals
from country import COUNRTY, name_service, full_name, COUNRTY_SMSMAN, name_service_smsman



def show_canals():
    keyword = InlineKeyboardMarkup(row_width=1)
    for chanal in chanals:
        btn = InlineKeyboardButton(text=chanal[0], url=chanal[2])
        keyword.insert(btn)
    btn_Done = InlineKeyboardButton('–Ø –ü–û–î–ü–ò–°–ê–õ–°–Ø', callback_data='done')
    keyword.insert(btn_Done)
    return keyword

ikb_serv = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('SmsActivate', callback_data='sms_activate'),
     InlineKeyboardButton('SmsMan', callback_data='smsman')]
])

kb = ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder='üç≠ XA·ààVA')
kb1 = KeyboardButton('üì® –ü–æ–ª—É—á–∏—Ç—å –°–ú–°')
kb2 = KeyboardButton('üíº –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
kb3 = KeyboardButton('üçπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
kb.add(kb1).add(kb2,kb3)


kbb = ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder='üç≠ XA·ààVA')
kbb1 = KeyboardButton('üì® –ü–æ–ª—É—á–∏—Ç—å –°–ú–°')
kbb2 = KeyboardButton('üíº –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
kbb3 = KeyboardButton('üçπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
kb4 = KeyboardButton('1$ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É')
kb5 = KeyboardButton('üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å')
kbb.add(kbb1).add(kbb2,kbb3).add(kb4,kb5)


sms = SMSActivateAPI(api_sms)

def countryes_smsman(i):
    keyboard = InlineKeyboardMarkup(row_width=3)
    btn = []
    navigation = []
    i = int(i)
    stop = i + 15
    num = 0
    for ids in COUNRTY_SMSMAN:
        num += 1
        if i < num:
            if i < stop:
                country_name = COUNRTY_SMSMAN.get(ids)
                btn.append(InlineKeyboardMarkup(text=country_name,
                                                      callback_data=f'SMS_man|{ids}|{country_name}'))
                i += 1
    keyboard.add(*btn)
    if i > 15:
        navigation.append(InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f'NEXT_man|{i - 30}'))

    if len(btn) == 15:
        navigation.append(InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'NEXT_man|{i}'))
    keyboard.add(*navigation)
    keyboard.add(InlineKeyboardButton(text='üîò –ú–µ–Ω—é', callback_data='back'))
    return keyboard


def countryes(i):
    keyboard = InlineKeyboardMarkup(row_width=3)
    btn = []
    navigation = []
    i = int(i)
    stop = i + 15
    num = 0
    for ids in COUNRTY:
        num += 1
        if i < num:
            if i < stop:
                country_name = COUNRTY.get(ids)
                btn.append(InlineKeyboardMarkup(text=country_name,
                                                      callback_data=f'set_c|{ids}|{country_name}'))
                i += 1
    keyboard.add(*btn)
    if i > 15:
        navigation.append(InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f'next_c|{i - 30}'))

    if len(btn) == 15:
        navigation.append(InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'next_c|{i}'))
    keyboard.add(*navigation)
    keyboard.add(InlineKeyboardButton(text='üîò –ú–µ–Ω—é', callback_data='back'))
    return keyboard

def service_smsman(i, strana):
    keyboard = InlineKeyboardMarkup(row_width=3)
    btn = []
    navigation = []
    i = int(i)
    stop = i + 15
    num = 0
    for ids in name_service_smsman:
        num += 1
        if i < num:
            if i < stop:
                country_name = name_service_smsman.get(ids)
                btn.append(InlineKeyboardMarkup(text=country_name,
                                                      callback_data=f'set_Sm|{ids}|{country_name}|{strana}'))
                i += 1
    keyboard.add(*btn)
    if i > 15:

        navigation.append(InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f'next_Sm|{i - 30}|{strana}'))

    if len(btn) == 15:
        navigation.append(InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'next_Sm|{i}|{strana}'))
    keyboard.add(*navigation)
    keyboard.add(InlineKeyboardButton(text='‚§µ –ú–µ–Ω—é', callback_data='back'))
    return keyboard

def service(i, strana):
    keyboard = InlineKeyboardMarkup(row_width=3)
    btn = []
    navigation = []

    i = int(i)
    stop = i + 15
    num = 0
    for ids in full_name:
        num += 1
        if i < num:
            if i < stop:
                country_name = full_name.get(ids)
                btn.append(InlineKeyboardMarkup(text=country_name,
                                                      callback_data=f'set_s_|{ids}|{country_name}|{strana}'))
                i += 1
    keyboard.add(*btn)
    if i > 15:

        navigation.append(InlineKeyboardButton(text='‚óÄÔ∏è', callback_data=f'next_s|{i - 30}|{strana}'))

    if len(btn) == 15:
        navigation.append(InlineKeyboardButton(text='‚û°Ô∏è', callback_data=f'next_s|{i}|{strana}'))
    keyboard.add(*navigation)
    keyboard.add(InlineKeyboardButton(text='‚§µ –ú–µ–Ω—é', callback_data='back'))
    return keyboard

async def service_number_smsman( countri, service, price):
    ikb_phone = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('üì≤ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥', callback_data=f'PhoneSMS|{countri}|{service}|{price}')],
        [InlineKeyboardButton('‚§µ –ú–µ–Ω—é', callback_data='back')]

    ])
    return ikb_phone

async def service_number(service, id, price):
    ikb_phone = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('üì≤ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥', callback_data=f'phone|{service}|{id}|{price}')],
        [InlineKeyboardButton('‚§µ –ú–µ–Ω—é', callback_data='back')]

    ])
    return ikb_phone


ikb_money =InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='go_pay')],
    [InlineKeyboardButton('‚§µ –ú–µ–Ω—é', callback_data='back')]
])



def sms_replay_smsman(id, price):
    ikb_sms =InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('üîÅ –û–±–Ω–æ–≤–∏—Ç—å', callback_data=f'man_sms|{id}|{price}')],
        # [InlineKeyboardButton('‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏—é', callback_data=f'man_ok|{id}')],
        [InlineKeyboardButton('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏—é', callback_data=f'man_nkay|{id}|{price}')],
        [InlineKeyboardButton('‚ö† –ù–æ–º–µ—Ä —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω', callback_data=f'man_not|{id}|{price}')],

    ])
    return ikb_sms


def sms_replay(number, id, price):
    ikb_sms =InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('üîÅ –û–±–Ω–æ–≤–∏—Ç—å', callback_data=f'go_sms|{number}|{id}|{price}')],
        [InlineKeyboardButton('‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏—é', callback_data=f'okay|{number}|{id}|{price}')],
        [InlineKeyboardButton('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏—é', callback_data=f'nkay|{number}|{id}|{price}')],
        [InlineKeyboardButton('‚ö† –ù–æ–º–µ—Ä —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω', callback_data=f'not|{number}|{id}|{price}')],

    ])
    return ikb_sms

ikb_payment =InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('üê≥ Crypto Bot', callback_data='go_crypto')],
    [InlineKeyboardButton('‚§µ –ú–µ–Ω—é', callback_data='back')]
])

ikb_buttons =InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('1$ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É', callback_data='BUT|1$ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É')],
    [InlineKeyboardButton('üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å', callback_data='BUT|üíµ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å')]
])

def add_but(buton):
    ikb_add_but =InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('–î–∞', callback_data=f'YES|{buton}')],
        [InlineKeyboardButton('–ù–µ—Ç', callback_data=f'NO|{buton}')]
    ])
    return ikb_add_but

def kb_rassilka(buton, url):
    ikb_reklama = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(buton, url=url)],
    ])
    return ikb_reklama


def ikb_tips_buton(buton):
    ikb_tips =InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton('–¢–µ–∫—Å—Ç', callback_data=f'Text|{buton}')],
        [InlineKeyboardButton('–§–æ—Ç–æ', callback_data=f'Photo|{buton}')],
        [InlineKeyboardButton('–ì–∏—Ñ–∫–∞', callback_data=f'Gif|{buton}')],
        [InlineKeyboardButton('–í–∏–¥–µ–æ', callback_data=f'Video|{buton}')],
        [InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back_tip')]
    ])
    return ikb_tips

def oplata_kb(id: str, url: str, price):
    kb = InlineKeyboardMarkup(row_width=1)
    kb.insert(InlineKeyboardButton(text='üí∞ –û–ø–ª–∞—Ç–∏—Ç—å', url=url))
    kb.add(InlineKeyboardButton(text='üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data=f'check|{id}|{price}'))
    kb.add(InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥', callback_data='back'))
    return kb


kb_admin = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
kb1 = KeyboardButton('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
kb2 = KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞')
kb3 = KeyboardButton('–û–±—â–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è')
kb4 = KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∏—Å—Å–∏–∏')
kb5 = KeyboardButton('–°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏')
kb6 = KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏')
kb7 = KeyboardButton('–í—ã—Ö–æ–¥')
kb8 = KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Å—ã–ª–æ–∫')
kb9 = KeyboardButton('–í–∫–ª—é—á–∏—Ç—å –û–ü')
kb10 = KeyboardButton('–í—ã–∫–ª—é—á–∏—Ç—å –û–ü')
kb11 = KeyboardButton('–í–ö–õ (–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å/–ó–∞–±—Ä–∞—Ç—å)')
kb12 = KeyboardButton('–í–´–ö–õ (–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å/–ó–∞–±—Ä–∞—Ç—å)')
kb13 = KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å/–ó–∞–±—Ä–∞—Ç—å)')
kb_admin.add(kb1,kb2,kb3,kb4,kb5,kb6,kb8,kb9,kb10,kb11,kb12,kb13, kb7)




ikb_tip_rassilka = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('–¢–µ–∫—Å—Ç/–§–æ—Ç–æ', callback_data='photo'),
     InlineKeyboardButton('–¢–µ–∫—Å—Ç', callback_data='Texts')]
])

ikb_stop = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('–í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö', callback_data='stop_input')]
])

